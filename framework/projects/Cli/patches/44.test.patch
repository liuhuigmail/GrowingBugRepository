diff --git a/src/test/java/org/apache/commons/cli/AbstractParserTestCase.java b/src/test/java/org/apache/commons/cli/AbstractParserTestCase.java
index 2965787..9f0b23e 100644
--- a/src/test/java/org/apache/commons/cli/AbstractParserTestCase.java
+++ b/src/test/java/org/apache/commons/cli/AbstractParserTestCase.java
@@ -21,7 +21,6 @@ import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 import static org.junit.jupiter.api.Assertions.assertThrows;
@@ -738,54 +737,6 @@ public abstract class AbstractParserTestCase {
         assertFalse(cmd.hasOption("fake"));
     }
 
-    @Test
-    public void testOptionalArgsOptionBuilder() throws Exception {
-        final Options opts = new Options();
-        opts.addOption(OptionBuilder.hasOptionalArgs(2).create('i'));
-        final Properties properties = new Properties();
-
-        CommandLine cmd = parse(parser, opts, new String[]{"-i"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertNull(null, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper"}, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper", "scissors"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper", "scissors"}, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper", "scissors", "rock"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper", "scissors"}, cmd.getOptionValues("i"));
-        assertArrayEquals(new String[]{"rock"}, cmd.getArgs());
-    }
-
-    @Test
-    public void testOptionalArgsOptionDotBuilder() throws Exception {
-        final Options opts = new Options();
-        opts.addOption(Option.builder("i").numberOfArgs(2).optionalArg(true).build());
-        final Properties properties = new Properties();
-
-        CommandLine cmd = parse(parser, opts, new String[]{"-i"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertNull(null, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper"}, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper", "scissors"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper", "scissors"}, cmd.getOptionValues("i"));
-
-        cmd = parse(parser, opts, new String[]{"-i", "paper", "scissors", "rock"}, properties);
-        assertTrue(cmd.hasOption("i"));
-        assertArrayEquals(new String[]{"paper", "scissors"}, cmd.getOptionValues("i"));
-        assertArrayEquals(new String[]{"rock"}, cmd.getArgs());
-    }
-
     @Test
     public void testReuseOptionsTwice() throws Exception {
         final Options opts = new Options();
