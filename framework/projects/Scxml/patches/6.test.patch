diff --git a/src/test/java/org/apache/commons/scxml/TieBreakerTest.java b/src/test/java/org/apache/commons/scxml/TieBreakerTest.java
index efdda9eb..d1b9ca20 100644
--- a/src/test/java/org/apache/commons/scxml/TieBreakerTest.java
+++ b/src/test/java/org/apache/commons/scxml/TieBreakerTest.java
@@ -17,7 +17,6 @@
 package org.apache.commons.scxml;
 
 import java.net.URL;
-import java.util.Iterator;
 import java.util.Set;
 
 import junit.framework.Test;
@@ -54,8 +53,7 @@ public class TieBreakerTest extends TestCase {
     }
 
     // Test data
-    private URL tiebreaker01, tiebreaker02, tiebreaker03, tiebreaker04,
-        tiebreaker05;
+    private URL tiebreaker01, tiebreaker02, tiebreaker03, tiebreaker04;
     private SCXMLExecutor exec;
 
     /**
@@ -70,16 +68,13 @@ public class TieBreakerTest extends TestCase {
             getResource("org/apache/commons/scxml/tie-breaker-03.xml");
         tiebreaker04 = this.getClass().getClassLoader().
             getResource("org/apache/commons/scxml/tie-breaker-04.xml");
-        tiebreaker05 = this.getClass().getClassLoader().
-            getResource("org/apache/commons/scxml/tie-breaker-05.xml");
     }
 
     /**
      * Tear down instance variables required by this test case.
      */
     public void tearDown() {
-        tiebreaker01 = tiebreaker02 = tiebreaker03 = tiebreaker04 =
-            tiebreaker05 = null;
+        tiebreaker01 = tiebreaker02 = tiebreaker03 = tiebreaker04 = null;
     }
 
     /**
@@ -133,29 +128,6 @@ public class TieBreakerTest extends TestCase {
         assertEquals(1, currentStates.size());
     }
 
-    public void testTieBreaker05() {
-        exec = SCXMLTestHelper.getExecutor(tiebreaker05);
-        assertNotNull(exec);
-        Set currentStates = exec.getCurrentStatus().getStates();
-        assertEquals(3, currentStates.size());
-        String id = ((State) currentStates.iterator().next()).getId();
-        Iterator iter = currentStates.iterator();
-        while (iter.hasNext()) {
-            id = ((State) iter.next()).getId();
-            assertTrue(id.equals("s11") || id.equals("s212")
-                || id.equals("s2111"));
-        }
-        currentStates = SCXMLTestHelper.fireEvent(exec, "event1");
-        assertEquals(3, currentStates.size());
-        id = ((State) currentStates.iterator().next()).getId();
-        iter = currentStates.iterator();
-        while (iter.hasNext()) {
-            id = ((State) iter.next()).getId();
-            assertTrue(id.equals("s12") || id.equals("s212")
-                || id.equals("s2112"));
-        }
-    }
-
     public static void main(String args[]) {
         TestRunner.run(suite());
     }
diff --git a/src/test/java/org/apache/commons/scxml/tie-breaker-05.xml b/src/test/java/org/apache/commons/scxml/tie-breaker-05.xml
deleted file mode 100644
index 637801f3..00000000
--- a/src/test/java/org/apache/commons/scxml/tie-breaker-05.xml
+++ /dev/null
@@ -1,68 +0,0 @@
-<?xml version="1.0"?>
-<!--
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
--->
-<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" initialstate="main">
-
-<!-- 
-  Testing dispute resolution in regions
-  {s11,s2111,s212} -event1-> {s12,s2112,s212}
--->
-
-    <state id="main">
-        <parallel id="para"> <!-- Outer parallel -->
-
-            <state id="s1">
-                <initial>
-                    <transition target="s11"/>
-                </initial>
-                <state id="s11">
-                    <transition event="event1" target="s12"/>
-                    <transition event="event1" target="s13"/>
-                </state>
-                <state id="s12"/>
-                <state id="s13"/>
-            </state>
-
-            <state id="s2">
-                <initial>
-                    <transition target="s21"/>
-                </initial>
-                <state id="s21">
-
-                    <parallel id="para1"> <!-- Inner parallel -->
-                        <state id="s211">
-                            <initial>
-                                <transition target="s2111"/>
-                            </initial>
-                            <state id="s2111">
-                                <transition event="event1" target="s2112"/>
-                                <transition event="event1" target="s2113"/>
-                            </state>
-                            <state id="s2112"/>
-                            <state id="s2113"/>
-                        </state>
-                        <state id="s212"/>                                          
-                    </parallel>
-
-                </state>
-                <state id="s22"/>
-            </state>
-
-        </parallel>
-    </state>
-
-</scxml>
