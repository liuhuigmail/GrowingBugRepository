diff --git a/src/main/java/org/apache/commons/scxml/model/Send.java b/src/main/java/org/apache/commons/scxml/model/Send.java
index ad43a617..44519ab2 100644
--- a/src/main/java/org/apache/commons/scxml/model/Send.java
+++ b/src/main/java/org/apache/commons/scxml/model/Send.java
@@ -116,6 +116,7 @@ public class Send extends Action implements ExternalContent {
     public Send() {
         super();
         this.externalNodes = new ArrayList();
+        this.targettype = TARGETTYPE_SCXML;
     }
 
     /**
@@ -281,26 +282,7 @@ public class Send extends Action implements ExternalContent {
             hintsValue = eval.eval(ctx, hints);
         }
         String targetValue = target;
-        if (!SCXMLHelper.isStringEmpty(target)) {
-            targetValue = (String) eval.eval(ctx, target);
-            if (SCXMLHelper.isStringEmpty(targetValue)
-                    && appLog.isWarnEnabled()) {
-                appLog.warn("<send>: target expression \"" + target
-                    + "\" evaluated to null or empty String");
-            }
-        }
-        String targettypeValue = targettype;
-        if (!SCXMLHelper.isStringEmpty(targettype)) {
-            targettypeValue = (String) eval.eval(ctx, targettype);
-            if (SCXMLHelper.isStringEmpty(targettypeValue)
-                    && appLog.isWarnEnabled()) {
-                appLog.warn("<send>: targettype expression \"" + targettype
-                    + "\" evaluated to null or empty String");
-            }
-        } else {
             // must default to 'scxml' when unspecified
-            targettypeValue = TARGETTYPE_SCXML;
-        }
         Map params = null;
         if (!SCXMLHelper.isStringEmpty(namelist)) {
             StringTokenizer tkn = new StringTokenizer(namelist);
@@ -318,9 +300,9 @@ public class Send extends Action implements ExternalContent {
         }
         long wait = parseDelay(appLog);
         // Lets see if we should handle it ourselves
-        if (targettypeValue != null
-              && targettypeValue.trim().equalsIgnoreCase(TARGETTYPE_SCXML)) {
-            if (SCXMLHelper.isStringEmpty(targetValue)) {
+        if (SCXMLHelper.isStringEmpty(targettype)
+                || targettype.trim().equalsIgnoreCase(TARGETTYPE_SCXML)) {
+            if (SCXMLHelper.isStringEmpty(target)) {
                 // TODO: Remove both short-circuit passes in v1.0
                 if (wait == 0L) {
                     derivedEvents.add(new TriggerEvent(event,
@@ -339,8 +321,8 @@ public class Send extends Action implements ExternalContent {
         }
         ctx.setLocal(getNamespacesKey(), null);
         // Else, let the EventDispatcher take care of it
-        evtDispatcher.send(sendid, targetValue, targettypeValue, event,
-            params, hintsValue, wait, externalNodes);
+        evtDispatcher.send(sendid, target, targettype, event, params,
+            hintsValue, wait, externalNodes);
     }
 
     /**
