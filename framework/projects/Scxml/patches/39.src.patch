diff --git a/src/main/java/org/apache/commons/scxml2/env/javascript/JSBindings.java b/src/main/java/org/apache/commons/scxml2/env/javascript/JSBindings.java
index 85bef0f7..0e9a6269 100644
--- a/src/main/java/org/apache/commons/scxml2/env/javascript/JSBindings.java
+++ b/src/main/java/org/apache/commons/scxml2/env/javascript/JSBindings.java
@@ -206,10 +206,6 @@ public class JSBindings implements Bindings {
      */
     @Override
     public Object get(Object key) {
-        if (hasGlobalBindings() && getGlobalBindings().containsKey(key)) {
-            return getGlobalBindings().get(key);
-        }
-
         if (bindings.containsKey(key)) {
             return bindings.get(key);
         }
@@ -268,10 +264,6 @@ public class JSBindings implements Bindings {
      */
     @Override
     public Object remove(Object key) {
-        if (hasGlobalBindings() && getGlobalBindings().containsKey(key)) {
-            getGlobalBindings().remove(key);
-        }
-
         if (bindings.containsKey(key)) {
             return bindings.remove(key);
         }
diff --git a/src/main/java/org/apache/commons/scxml2/env/javascript/JSEvaluator.java b/src/main/java/org/apache/commons/scxml2/env/javascript/JSEvaluator.java
index 8b47e931..99f39713 100644
--- a/src/main/java/org/apache/commons/scxml2/env/javascript/JSEvaluator.java
+++ b/src/main/java/org/apache/commons/scxml2/env/javascript/JSEvaluator.java
@@ -151,15 +151,13 @@ public class JSEvaluator implements Evaluator {
             jsExpression = LOCATION_FN.matcher(jsExpression).replaceAll("_builtin.Location(");
 
             // ... evaluate
-            JSBindings jsBindings = new JSBindings(effectiveContext, bindings);
-            jsBindings.put("_builtin", new JSFunctions(effectiveContext));
+            JSBindings jsBindings = new JSBindings(context, bindings);
 
-            Object ret = engine.eval(jsExpression, jsBindings);
+            jsBindings.put("_builtin", new JSFunctions(context));
 
             // copy global bindings attributes to context, so callers may get access to the evaluated variables.
-            copyGlobalBindingsToContext(jsBindings, (JSContext) effectiveContext);
+            return engine.eval(jsExpression,jsBindings);
 
-            return ret;
 
         } catch (Exception x) {
             throw new SCXMLExpressionException("Error evaluating ['" + expression + "'] " + x);
