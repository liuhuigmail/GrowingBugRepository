diff --git a/src/main/java/org/apache/commons/scxml/model/Send.java b/src/main/java/org/apache/commons/scxml/model/Send.java
index 47e358a9..93ee1c21 100644
--- a/src/main/java/org/apache/commons/scxml/model/Send.java
+++ b/src/main/java/org/apache/commons/scxml/model/Send.java
@@ -326,15 +326,6 @@ public class Send extends Action implements ExternalContent {
                 wait = parseDelay(delayString, appLog);
             }
         }
-        String eventValue = event;
-        if (!SCXMLHelper.isStringEmpty(event)) {
-            eventValue = (String) eval.eval(ctx, event);
-            if (SCXMLHelper.isStringEmpty(eventValue)
-                    && appLog.isWarnEnabled()) {
-                appLog.warn("<send>: event expression \"" + event
-                    + "\" evaluated to null or empty String");
-            }
-        }
         // Lets see if we should handle it ourselves
         if (targettypeValue != null
               && targettypeValue.trim().equalsIgnoreCase(TARGETTYPE_SCXML)) {
@@ -342,10 +333,10 @@ public class Send extends Action implements ExternalContent {
                 // TODO: Remove both short-circuit passes in v1.0
                 if (wait == 0L) {
                     if (appLog.isDebugEnabled()) {
-                        appLog.debug("<send>: Enqueued event '" + eventValue
+                        appLog.debug("<send>: Enqueued event '" + event
                             + "' with no delay");
                     }
-                    derivedEvents.add(new TriggerEvent(eventValue,
+                    derivedEvents.add(new TriggerEvent(event,
                         TriggerEvent.SIGNAL_EVENT, params));
                     return;
                 }
@@ -364,13 +355,13 @@ public class Send extends Action implements ExternalContent {
         }
         ctx.setLocal(getNamespacesKey(), null);
         if (appLog.isDebugEnabled()) {
-            appLog.debug("<send>: Dispatching event '" + eventValue
+            appLog.debug("<send>: Dispatching event '" + event
                 + "' to target '" + targetValue + "' of target type '"
                 + targettypeValue + "' with suggested delay of " + wait
                 + "ms");
         }
         // Else, let the EventDispatcher take care of it
-        evtDispatcher.send(sendid, targetValue, targettypeValue, eventValue,
+        evtDispatcher.send(sendid, targetValue, targettypeValue, event,
             params, hintsValue, wait, externalNodes);
     }
 
